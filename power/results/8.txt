BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'VIETNAM' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'ASIA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'SMALL POLISHED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1713798.41..1713800.24 rows=730 width=38) (actual time=8875.249..8875.249 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=2087592 read=229747
   ->  HashAggregate  (cost=1713750.92..1713763.70 rows=730 width=38) (actual time=8875.155..8875.157 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=2087589 read=229747
         ->  Hash Join  (cost=39448.68..1713269.90 rows=24051 width=38) (actual time=671.487..8839.208 rows=24645 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=2087589 read=229747
               ->  Nested Loop  (cost=39447.11..1712817.38 rows=24051 width=16) (actual time=671.394..8808.706 rows=24645 loops=1)
                     Buffers: shared hit=2087585 read=229747
                     ->  Hash Join  (cost=39446.82..1705048.93 rows=24076 width=16) (actual time=671.345..8621.701 rows=24645 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=2015964 read=227299
                           ->  Nested Loop  (cost=416.14..1665326.07 rows=120378 width=20) (actual time=11.022..7889.720 rows=122896 loops=1)
                                 Buffers: shared hit=1870557 read=226469
                                 ->  Nested Loop  (cost=415.70..1470799.31 rows=397290 width=16) (actual time=10.501..3469.250 rows=405437 loops=1)
                                       Buffers: shared hit=312065 read=161081
                                       ->  Bitmap Heap Scan on part  (cost=410.98..27997.82 rows=13233 width=4) (actual time=10.393..156.779 rows=13501 loops=1)
                                             Recheck Cond: ((p_type)::text = 'SMALL POLISHED NICKEL'::text)
                                             Heap Blocks: exact=11485
                                             Buffers: shared hit=4 read=11566
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..407.68 rows=13233 width=0) (actual time=7.963..7.963 rows=13501 loops=1)
                                                   Index Cond: ((p_type)::text = 'SMALL POLISHED NICKEL'::text)
                                                   Buffers: shared read=85
                                       ->  Bitmap Heap Scan on lineitem  (cost=4.72..108.72 rows=31 width=20) (actual time=0.034..0.236 rows=30 loops=13501)
                                             Recheck Cond: (l_partkey = part.p_partkey)
                                             Heap Blocks: exact=405433
                                             Buffers: shared hit=312061 read=149515
                                             ->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_l_shipmode_idx  (cost=0.00..4.71 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13501)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                                   Buffers: shared hit=40620 read=15523
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=405437)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1558492 read=65388
                           ->  Hash  (cost=35280.69..35280.69 rows=300000 width=4) (actual time=654.481..654.481 rows=300270 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                 Buffers: shared hit=145407 read=830
                                 ->  Nested Loop  (cost=906.18..35280.69 rows=300000 width=4) (actual time=21.513..552.150 rows=300270 loops=1)
                                       Buffers: shared hit=145407 read=830
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.036..0.079 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.012 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                         Filter: (r_name = 'ASIA'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=905.11..6455.64 rows=60000 width=8) (actual time=18.025..100.345 rows=60054 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Heap Blocks: exact=145400
                                             Buffers: shared hit=145405 read=830
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.11 rows=60000 width=0) (actual time=12.077..12.077 rows=60054 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=5 read=830
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=24645)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=71621 read=2448
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.039..0.039 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.013 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 12.372 ms
 Execution time: 8876.100 ms
(72 rows)

COMMIT;
COMMIT
